[[{"l":"Powerful data objects for Laravel","p":["A laravel-data specific object is just a regular PHP object that extends from Data:","Add support for automatically validating data objects when creating them","And a lot more ...","Automatically creating data objects from request data and validating them","Automatically resolve validation rules for properties within a data object","Automatically transforming data objects into resources (like the Laravel API resources)","By extending from Data you enable a lot of new functionality like:","Generate TypeScript definitions from your data objects you can use on the frontend","instead of a form request, you can use a data object","instead of an API transformer, you can use a data object","instead of manually writing a typescript definition, you can use... \uD83E\uDD41 a data object","Latest Version on Packagist Tests PHPStan Check & fix styling Total Downloads","Make it possible to construct a data object from any type you want","Save data objects as properties of an Eloquent model","This package enables the creation of rich data objects which can be used in various ways. Using this package you only need to describe your data once:","Transform only the requested parts of data objects with lazy properties","Why would you be using this package?","You can be sure that data is typed when it leaves your app and comes back again from the frontend which makes a lot less errors","You don't have to write the same properties three times (in a resource, in a data transfer object and in request validation)","You get TypeScript versions of the data objects for free","You need to write a lot less of validation rules because they are obvious through PHP's type system"]},{"i":"are-you-a-visual-learner","l":"Are you a visual learner?","p":["In this talk, given at Laracon, you'll see an introduction to Laravel Data."]},{"l":"Support us","p":["We invest a lot of resources into creating best in class open source packages. You can support us by buying one of our paid products.","We highly appreciate you sending us a postcard from your hometown, mentioning which of our package(s) you are using. You'll find our address on our contact page. We publish all received postcards on our virtual postcard wall."]},{"l":"Documentation","p":["You will find full documentation on the dedicated documentation site."]},{"l":"Testing"},{"l":"Changelog","p":["Please see CHANGELOG for more information on what has changed recently."]},{"l":"Contributing","p":["Please see CONTRIBUTING for details."]},{"l":"Security Vulnerabilities","p":["Please review our security policy on how to report security vulnerabilities."]},{"l":"Credits","p":["Ruben Van Assche","Aidan Casey(Validation Attributes)","All Contributors"]},{"l":"License","p":["The MIT License (MIT). Please see License File for more information."]}],[{"l":"Jigsaw Docs Starter Template","p":["This is a starter template for creating a beautiful, customizable documentation site for your project with minimal effort. You’ll only have to change a few settings and you’re ready to go.","View a preview of the docs template."]},{"l":"Installation","p":["After installing Jigsaw, run the following command from your project directory:","This starter template includes samples of common page types, and comes pre-configured with:","A fully responsive navigation bar","A sidebar navigation menu","Tailwind CSS, a utility CSS framework that allows you to customize your design without touching a line of CSS","Purgecss to remove unused selectors from your CSS, resulting in smaller CSS files","Syntax highlighting using highlight.js","A script that automatically generates a sitemap.xml file","A search bar powered by Algolia DocSearch, and instructions on how to get started with their free indexing service","A custom 404 page","Docs starter template screenshot"]},{"l":"Configuring your new site","p":["As with all Jigsaw sites, configuration settings can be found in config.php; you can update the variables in that file with settings specific to your project. You can also add new configuration variables there to use across your site; take a look at the Jigsaw documentation to learn more.","Tip: This configuration file is also where you’ll define any \"collections\" (for example, a collection of the contributors to your site, or a collection of blog posts). Check out the official Jigsaw documentation to learn more."]},{"l":"Adding Content","p":["You can write your content using a variety of file types. By default, this starter template expects your content to be located in the source/docs folder. If you change this, be sure to update the URL references in navigation.php.","The first section of each content page contains a YAML header that specifies how it should be rendered. The title attribute is used to dynamically generate HTML title and OpenGraph tags for each page. The extends attribute defines which parent Blade layout this content file will render with (e.g. _layouts.documentation will render with source/_layouts/documentation.blade.php), and the section attribute defines the Blade \"section\" that expects this content to be placed into it.","Read more about Jigsaw layouts."]},{"l":"Adding Assets","p":["Any assets that need to be compiled (such as JavaScript, Less, or Sass files) can be added to the source/_assets/ directory, and Laravel Mix will process them when running npm run dev or npm run prod. The processed assets will be stored in /source/assets/build/(note there is no underscore on this second assets directory).","Then, when Jigsaw builds your site, the entire /source/assets/ directory containing your built files (and any other directories containing static assets, such as images or fonts, that you choose to store there) will be copied to the destination build folders ( build_local, on your local machine).","Files that don't require processing (such as images and fonts) can be added directly to /source/assets/.","Read more about compiling assets in Jigsaw using Laravel Mix."]},{"l":"Building Your Site","p":["Now that you’ve edited your configuration variables and know how to customize your styles and content, let’s build the site."]}],[{"i":"#","p":["About Seo"]},{"l":"module_seo","p":["Il modulo \"module_seo\" è un pacchetto per Laravel che fornisce funzionalità per la gestione del SEO (Search Engine Optimization) in un'applicazione Laravel. Il modulo consente di gestire facilmente i metadati delle pagine, come il titolo e la descrizione, nonché di generare automaticamente il sitemap e i tag per i social media.","Per utilizzare il modulo, è necessario installarlo tramite Composer con il comando composer require laraxot/module_seo. Una volta installato, il modulo può essere utilizzato nell'applicazione Laravel tramite il seguente codice:","Copy code use Laraxot\\ModuleSeo\\Facades\\ModuleSeo; Il modulo include diverse funzionalità per la gestione del SEO, come ad esempio il metodo setTitle() per impostare il titolo della pagina, o il metodo addMeta() per aggiungere un tag meta personalizzato alla pagina.","Per utilizzare il modulo, è necessario prima configurare l'applicazione per supportare il modulo. La configurazione può essere eseguita tramite il comando Artisan php artisan seo:install, che creerà le tabelle del database necessarie per gestire i metadati delle pagine e aggiungerà il middleware per la gestione automatica del titolo e della descrizione delle pagine."]}],[{"i":"#","p":["Configure Algolia DocSearch with the Jigsaw docs starter template"]},{"l":"Algolia DocSearch","p":["This starter template includes support for DocSearch, a documentation indexing and search tool provided by Algolia for free. To configure this tool, you’ll need to sign up with Algolia and set your API Key and index name in config.php. Algolia will then crawl your documentation regularly, and index all your content.","Get your DocSearch credentials here.","Once the docsearchApiKey and docsearchIndexName values are set in config.php, the search field at the top of the page is ready to use.","To help Algolia index your pages correctly, it's good practice to add a unique id or name attribute to each heading tag ( h1, h2, etc.). By doing so, a user will be taken directly to the appropriate section of the page when they click a search result."]},{"i":"algolia-adding-custom-styles","l":"Adding Custom Styles","p":["If you'd like to customize the styling of the search results, Algolia exposes custom CSS classes that you can modify:","For more details, visit the official Algolia DocSearch documentation."]}],[{"i":"#","p":["Custom 404 pages with Jigsaw docs starter template"]},{"l":"Custom 404 Page","p":["This starter template includes a custom 404 Not Found error page, located at /source/404.blade.php. To preview the 404 page, you can visit /404 in your browser.","Depending on where your site is hosted, you may need to configure your server to use the custom 404 page. For more details, visit the Jigsaw documentation about configuring a custom 404 page."]}],[{"i":"#","p":["Getting started with Jigsaw's docs starter template is as easy as 1, 2, 3."]},{"l":"Getting Started","p":["Pagina in italiano This is a starter template for creating a beautiful, customizable documentation site for your project with minimal effort. You’ll only have to change a few settings and you’re ready to go."]},{"i":"getting-started-configuration","l":"Configuration","p":["As with all Jigsaw sites, configuration settings can be found in config.php; you can update the variables in that file with settings specific to your project. You can also add new configuration variables there to use across your site; take a look at the Jigsaw documentation to learn more.","Tip: This configuration file is also where you’ll define any \"collections\" (for example, a collection of the contributors to your site, or a collection of blog posts). Check out the official Jigsaw documentation to learn more."]},{"i":"getting-started-adding-content","l":"Adding Content","p":["You can write your content using a variety of file types. By default, this starter template expects your content to be located in the source/docs folder. If you change this, be sure to update the URL references in navigation.php.","Read more about navigation.","The first section of each content page contains a YAML header that specifies how it should be rendered. The title attribute is used to dynamically generate HTML title and OpenGraph tags for each page. The extends attribute defines which parent Blade layout this content file will render with (e.g. _layouts.documentation will render with source/_layouts/documentation.blade.php), and the section attribute defines the Blade \"section\" that expects this content to be placed into it.","Read more about Jigsaw layouts."]},{"i":"getting-started-adding-assets","l":"Adding Assets","p":["Any assets that need to be compiled (such as JavaScript, Less, or Sass files) can be added to the source/_assets/ directory, and Laravel Mix will process them when running npm run dev or npm run prod. The processed assets will be stored in /source/assets/build/(note there is no underscore on this second assets directory).","Then, when Jigsaw builds your site, the entire /source/assets/ directory containing your built files (and any other directories containing static assets, such as images or fonts, that you choose to store there) will be copied to the destination build folders ( build_local, on your local machine).","Files that don't require processing (such as images and fonts) can be added directly to /source/assets/.","Read more about compiling assets in Jigsaw using Laravel Mix."]},{"i":"getting-started-building-your-site","l":"Building Your Site","p":["Now that you’ve edited your configuration variables and know how to customize your styles and content, let’s build the site."]}],[{"i":"#","p":["Building a navigation menu for your site"]},{"l":"Navigation","p":["The navigation menu in the left-hand sidebar is defined using an array in navigation.php. Nested pages can be added by using the children associative array."]}],[{"l":"Changelog","p":["All notable changes to laravel-data will be documented in this file."]},{"i":"210---2022-12-07","l":"2.1.0 - 2022-12-07","p":["Stop using custom pipeline when creating data magically from requests","set timezones in datetime casts (#287 )"]},{"i":"2016---2022-11-18","l":"2.0.16 - 2022-11-18","p":["add support for optional properties in TypeScript transformer (#153)"]},{"i":"2015---2022-11-17","l":"2.0.15 - 2022-11-17","p":["refactor test suite to Pest (#239)","update the docs","add a StudlyMapper","add better support for Livewire"]},{"i":"2014---2022-11-10","l":"2.0.14 - 2022-11-10","p":["accept 'float' as data type (#237)","fix typo in mime type validation rule(#243)","add support for enums in validation attributes","add support for withoutTrashed to exists validation attribute (#248)","add PHP 8.2 testing in GH actions","add ability to modify properties before the data pipeline (#247)"]},{"i":"2013---2022-10-14","l":"2.0.13 - 2022-10-14","p":["fix first and last page url are never null (#215)","add ability to statically retrieve a data models rules (#221)","improved pattern matching in DataCollectionAnnotationReader (#225)","add ExcludeWithout attribute rule (#230)","improve getValidationRules to also retrieve wildcard rules (#231)","return property with or without mapping the name (#199)"]},{"i":"2012---2022-09-29","l":"2.0.12 - 2022-09-29","p":["Improve pattern matching in DataCollectionAnnotationReader (#214)","Add ability to retrieve rules for a data object (#221)"]},{"i":"2011---2022-09-28","l":"2.0.11 - 2022-09-28","p":["Use generics with Data::collection (#213)","Improve pattern matching in DataCollectionAnnotationReader (#214)","Fix TypeScript Transformer paginated collections, first and last page url are never null (#215)"]},{"i":"2010---2022-09-07","l":"2.0.10 - 2022-09-07","p":["Add support for a JsonSerializer","Fix generic iterator definition for data collections","Fix validation of DataCollection objects not working as expected"]},{"i":"209---2022-08-23","l":"2.0.9 - 2022-08-23","p":["Add support for timezone manipulation in casts and transformers (#200)"]},{"i":"208---2022-08-18","l":"2.0.8 - 2022-08-18","p":["use AbstractCloner instead of reflection (#196)"]},{"i":"207---2022-08-18","l":"2.0.7 - 2022-08-18","p":["Add var dumper caster (#195)","Allow direct pipeline call (#193)","Rename ArrayableNormalizer (#191)","Make normalizers configurable (#190)"]},{"i":"206---2022-08-12","l":"2.0.6 - 2022-08-12","p":["Add cast lazy condition result to bool (#186)","Add conditional return types for collections (#184)","Fix windows tests"]},{"i":"205---2022-08-10","l":"2.0.5 - 2022-08-10","p":["Fix validation rules not being used for data collections and objects"]},{"i":"204---2022-08-01","l":"2.0.4 - 2022-08-01","p":["Add IDE completion support (#182)"]},{"i":"203---2022-07-29","l":"2.0.3 - 2022-07-29","p":["Add support for invokable rules (#179)"]},{"i":"202---2022-07-29","l":"2.0.2 - 2022-07-29","p":["more consistent use of transform through codebase for transforming collections and data"]},{"i":"201---2022-07-13","l":"2.0.1 - 2022-07-13","p":["Add class defined partials (#164)","Use mapped property names in TypeScript (#154)","Add make:data command (#157)","Better support for overwritten rules","Add support for Lazy inertia props (#163)","Add support for array query parameters as partials (#162)"]},{"i":"200---2022-07-08","l":"2.0.0 - 2022-07-08","p":["Version 2 of laravel-data is a complete overhaul, we've almost completely rewritten the package.","This is a (non-complete) list of the new features:","A DataPipeline","Data normalizers","Mappable property names","Wrapping of data in responses","only and except methods on Data and DataCollections","Multiple parameter magic methods","Optional properties","Split DataCollections","Better support for TypeScript Transformer","And a lot more ..."]},{"i":"151---2022-07-08","l":"1.5.1 - 2022-07-08","p":["Fix optional parameters (#152)","Use protected properties and methods (#147 )"]},{"i":"150---2022-05-25","l":"1.5.0 - 2022-05-25"},{"i":"whats-changed","l":"What's Changed","p":["add values() on DataCollection by @Nielsvanpach in https://github.com/spatie/laravel-data/pull/135"]},{"l":"New Contributors","p":["@Nielsvanpach made their first contribution in https://github.com/spatie/laravel-data/pull/135","Full Changelog: https://github.com/spatie/laravel-data/compare/1.4.7...1.5.0"]},{"i":"147---2022-05-16","l":"1.4.7 - 2022-05-16","p":["support $payload as a dependency in rules (#123)"]},{"i":"146---2022-04-06","l":"1.4.6 - 2022-04-06","p":["Add Dependency Injection for rules, messages, and attributes methods (#114)"]},{"i":"145---2022-03-18","l":"1.4.5 - 2022-03-18","p":["Add support for stdClass payload casting (#106)"]},{"i":"144---2022-03-18","l":"1.4.4 - 2022-03-18","p":["use present validation rule instead of required for data collections"]},{"i":"143---2022-02-16","l":"1.4.3 - 2022-02-16","p":["allow using default password config in password validation attribute (#94)","solve binding issues on Laravel Octane (#101)","fixes a bug where models nested by relation could not be created due to date casts","add a links array to the paginated response","stop execution of lazy::whenLoaded closure when the relation is null"]},{"i":"142---2022-01-26","l":"1.4.2 - 2022-01-26","p":["fix for aborting value assignment after a false boolean (#80)","add a WithoutValidation attribute","allow transformers to target native types, data collections and data objects"]},{"i":"141---2022-01-21","l":"1.4.1 - 2022-01-21","p":["Allow transformers to target Data and DataCollections"]},{"i":"140---2022-01-20","l":"1.4.0 - 2022-01-20","p":["removes checks for built in types and isBuiltIn from DataProperty","add better support for defaults"]},{"i":"133---2022-01-20","l":"1.3.3 - 2022-01-20"},{"i":"whats-changed-1","l":"What's Changed","p":["Laravel 9.x by @aidan-casey in https://github.com/spatie/laravel-data/pull/77","Removes Spatie's Laravel Enums from dev requirements by @aidan-casey in https://github.com/spatie/laravel-data/pull/76"]},{"i":"new-contributors-1","l":"New Contributors","p":["@aidan-casey made their first contribution in https://github.com/spatie/laravel-data/pull/77","Full Changelog: https://github.com/spatie/laravel-data/compare/1.3.2...1.3.3"]},{"i":"132---2022-01-19","l":"1.3.2 - 2022-01-19","p":["add support for json_encode to Data objects","add support for json_encode to DataCollection objects"]},{"i":"131---2022-01-07","l":"1.3.1 - 2022-01-07","p":["add basic support for intersection types","allow casting of built in PHP types","add support for inferring enum rules","fix an issue where an Enum validation attribute would not work"]},{"i":"125---2021-12-29","l":"1.2.5 - 2021-12-29","p":["fixes the RequiredRuleResolver to support custom rules like Enum","add an Enum validation rule attribute"]},{"i":"124---2021-12-16","l":"1.2.4 - 2021-12-16","p":["rename the authorized method to authorize","disable the behavior were excluded conditional properties still could be included"]},{"i":"123---2021-12-03","l":"1.2.3 - 2021-12-03","p":["fix return type notice message"]},{"i":"121---2021-11-19","l":"1.2.1 - 2021-11-19","p":["fixes an issue where data object could not be created when it had lazy nested data object","fixes windows test suite"]},{"i":"120---2021-11-16","l":"1.2.0 - 2021-11-16","p":["when creating data objects, we now will always run validation when a Request object is given not only when a data object is injected","removal of DataFromRequestResolver","added DataValidatorResolver"]},{"i":"110---2021-11-12","l":"1.1.0 - 2021-11-12","p":["change data property types collection checking procedure","move spatie/test-time dependency to require-dev","expand support for nested data object creation (#19)","expand support for annotating data collections"]},{"i":"104---2021-11-04","l":"1.0.4 - 2021-11-04","p":["revert allow ignoring with a closure within a unique rule"]},{"i":"103---2021-11-02","l":"1.0.3 - 2021-11-02","p":["allow ignoring with a closure within a unique rule"]},{"i":"102---2021-11-02","l":"1.0.2 - 2021-11-02","p":["add a WithData trait for quicker getting data from objects"]},{"i":"101---2021-10-28","l":"1.0.1 - 2021-10-28","p":["fix required rules being added when not allowed"]},{"i":"100---2021-10-27","l":"1.0.0 - 2021-10-27","p":["initial release"]}],[{"l":"LICENSE","p":["The MIT License (MIT)","Copyright (c) spatie ruben@spatie.be","Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:","The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."]}],[{"l":"Upgrading","p":["Because there are many breaking changes an upgrade is not that easy. There are many edge cases this guide does not cover. We accept PRs to improve this guide."]},{"l":"From v1 to v2","p":["By default, it is now impossible to include/exclude properties using a request parameter until manually specified. This behaviour can be overwritten by adding these methods to your data object:","DataCollection is now being split into a DataCollection, PaginatedDataCollection and CursorPaginatedDataCollection","DataProperty types is removed in favor of DataType","High impact changes","If you were directly using Resolvers, please take a look, they have changed a lot","If you were using the inclusion and exclusion trees, please update your code to use the partialTrees","Low impact changes","Please check the most recent data.php config file and change yours accordingly","The Cast interface now has a $context argument in the cast method","The DataProperty and DataClass structures are completely rewritten","The DataTransformer and DataCollectionTransformer now use a WrapExecutionType","The DataTypeScriptTransformer is updated for this new version, if you extend this then please take a look","The filter method was removed from paginated data collections","The Lazy class is now split into DefaultLazy, ConditionalLazy and RelationalLazy all implementing Lazy","The RuleInferrer interface now has a RulesCollection argument instead of an array","The through and filter operations on a DataCollection will now happen instant instead of waiting for the transforming process","The transform method signature is updated on Data and DataCollection","The validate method on a data object will not create a data object after validation, use validateAndCreate instead"]}]]